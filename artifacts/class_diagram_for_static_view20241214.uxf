<diagram program="umletino" version="15.1"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>350</x><y>420</y><w>510</w><h>200</h></coordinates><panel_attributes>Task
--
+task_id: int
+task_name: String
+context: String
+workers: String[]   //user_id[]
+dueDate: String
+isDone: boolean
--
+Task(name: String, context: String, workers: String[], dueDate: String)
+editTask(name: String, context: String, workers: String[], dueDate: String): void
+markTaskAsComplete(): void
+press(user_id: String): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>450</x><y>90</y><w>540</w><h>260</h></coordinates><panel_attributes>Project
--
+project_id: String
+leader: String     //user_id
+members: String[]      //user_id[]
+schedule: Schedule
+tasks: Task[]
+dueDate: String
--
+Project(leader)
+inviteUser(user_id: String): void
+changeLeader(next_leader: String): void
+deleteMember(user_id: String): void
+createTask(name: String, context: String, workers: String[], dueDate: String): Task
+createNotice(project_id, receiver: String[], message: String): void
+setDueDate(date: String): void
+deleteProject(): void

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>90</y><w>400</w><h>180</h></coordinates><panel_attributes>User
--
+id: String
+password: String
+nickName: String
+projects: Project[]
+accessToken: String
--
+User(id: String, password: String, nickName: String)
+login(id: String, password: String): void
+createProject(): Project
+moveToProject(p: Project): void
+sendNotification(): void
+inviteUser(user_id: String, project_id: String)
+fetchAccessToken(): void
+updateNickname(nickName: String): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>870</x><y>420</y><w>390</w><h>170</h></coordinates><panel_attributes>Schedule
--
+schedule_id: String
+availableTimes: boolean[][]
--
+Schedule()
+setSchedule(user_id: String, individual_available: int[]): void
+requestSchedule(): void
+mergeAvailableTime(): void
+setMeetingTime(all_available: int[]): void
+viewAvailableTime(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>620</x><y>340</y><w>50</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
m1=
m2=0..n</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>920</x><y>340</y><w>50</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
m1=
m2=0..n</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>390</x><y>80</y><w>80</w><h>40</h></coordinates><panel_attributes></panel_attributes><additional_attributes>10;20;60;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>20</x><y>330</y><w>310</w><h>120</h></coordinates><panel_attributes>Alarm
--
+project_id: String
+receiver: String[]
+message: context
+dueDate: String
--
+view(receiver, message): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>170</x><y>260</y><w>50</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
m1=
m2=0..n</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element></diagram>